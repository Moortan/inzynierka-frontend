{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sleniart/projects/react-front/src/Utils/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common'; // handle the private routes\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => getToken() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 72\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/Utils/PrivateRoute.js"],"names":["React","Route","Redirect","getToken","PrivateRoute","component","Component","rest","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,QAAyB,UAAzB,C,CAEA;;AACA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAtB,EAAyD;AACrD,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EAAGC,KAAD,IAAWL,QAAQ,kBAAK,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAL,gBAAgC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AAF/D;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQR,Y;AAST,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken } from './Common'\n\n// handle the private routes\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n        />\n    )\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}