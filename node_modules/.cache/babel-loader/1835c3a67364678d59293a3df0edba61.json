{"ast":null,"code":"import _objectSpread from\"/Users/sleniart/projects/react-front/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{VERIFY_TOKEN_STARTED,VERIFY_TOKEN_END,USER_LOGIN_STARTED,USER_LOGIN_FAILURE,VERIFY_USER_SUCCESS,USER_LOGOUT,USER_SIGNUP_SUCCESS,USER_SIGNUP_STARTED,USER_SIGNUP_FAILURE}from\"../actions/actionTypes\";// define initial state of auth reducer\nvar initialState={token:null,// manage the access token\nexpiredAt:null,// manage expiry time of the access token\nuser:null,// manage the user details\nauthLoading:true,// to indicate that the auth API is in progress\nisAuthenticated:false,// consider as a authentication flag\nuserLoginLoading:false,// to indicate that the user signin API is in progress\nuserSignupLoading:false,//to indicate that the user signup API is in progress\nloginError:null,// manage the error of the user signin API\nsignupError:null,//manage the error of the user signup API \nsignupSuccess:null//manage the scuccess message of the signup\n};// update store based on type and payload and return the state\nvar auth=function auth(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){// verify token - started\ncase VERIFY_TOKEN_STARTED:var silentAuth=action.payload.silentAuth;return silentAuth?_objectSpread({},state):initialState;// verify token - ended/failed\ncase VERIFY_TOKEN_END:return _objectSpread(_objectSpread({},state),{},{authLoading:false});// user login - started\ncase USER_LOGIN_STARTED:return _objectSpread(_objectSpread({},state),{},{userLoginLoading:true});// user login - ended/failed\ncase USER_LOGIN_FAILURE:var error=action.payload.error;return _objectSpread(_objectSpread({},state),{},{loginError:error,userLoginLoading:false});// verify token - success\ncase VERIFY_USER_SUCCESS:var _action$payload=action.payload,token=_action$payload.token,expiredAt=_action$payload.expiredAt,user=_action$payload.user;return _objectSpread(_objectSpread({},state),{},{token:token,expiredAt:expiredAt,user:user,isAuthenticated:true,authLoading:false,userLoginLoading:false});// handle user logout\ncase USER_LOGOUT:return _objectSpread(_objectSpread({},initialState),{},{authLoading:false});case USER_SIGNUP_STARTED:return _objectSpread(_objectSpread({},state),{},{userSignupLoading:true});case USER_SIGNUP_SUCCESS:var signupSuccess=action.payload.signupSuccess;return _objectSpread(_objectSpread({},state),{},{userSignupLoading:false,signupSuccess:signupSuccess});case USER_SIGNUP_FAILURE:var signupError=action.payload.signupError;return _objectSpread(_objectSpread({},state),{},{userSignupLoading:false,signupError:signupError});default:return state;}};export default auth;","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/reducers/authReducer.js"],"names":["VERIFY_TOKEN_STARTED","VERIFY_TOKEN_END","USER_LOGIN_STARTED","USER_LOGIN_FAILURE","VERIFY_USER_SUCCESS","USER_LOGOUT","USER_SIGNUP_SUCCESS","USER_SIGNUP_STARTED","USER_SIGNUP_FAILURE","initialState","token","expiredAt","user","authLoading","isAuthenticated","userLoginLoading","userSignupLoading","loginError","signupError","signupSuccess","auth","state","action","type","silentAuth","payload","error"],"mappings":"sHAAA,OACIA,oBADJ,CAC0BC,gBAD1B,CAEIC,kBAFJ,CAEwBC,kBAFxB,CAGIC,mBAHJ,CAGyBC,WAHzB,CAGsCC,mBAHtC,CAG2DC,mBAH3D,CAGgFC,mBAHhF,KAIO,wBAJP,CAMA;AACA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,IADU,CACJ;AACbC,SAAS,CAAE,IAFM,CAEA;AACjBC,IAAI,CAAE,IAHW,CAGL;AACZC,WAAW,CAAE,IAJI,CAIE;AACnBC,eAAe,CAAE,KALA,CAKO;AACxBC,gBAAgB,CAAE,KAND,CAMQ;AACzBC,iBAAiB,CAAE,KAPF,CAOS;AAC1BC,UAAU,CAAE,IARK,CAQC;AAClBC,WAAW,CAAE,IATI,CASE;AACnBC,aAAa,CAAE,IAAK;AAVH,CAArB,CAaA;AACA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBZ,YAAyB,IAAXa,CAAAA,MAAW,2CAC3C,OAAQA,MAAM,CAACC,IAAf,EACI;AACA,IAAKvB,CAAAA,oBAAL,IACYwB,CAAAA,UADZ,CAC2BF,MAAM,CAACG,OADlC,CACYD,UADZ,CAEI,MAAOA,CAAAA,UAAU,kBACVH,KADU,EAEbZ,YAFJ,CAGJ;AACA,IAAKR,CAAAA,gBAAL,CACI,sCACOoB,KADP,MAEIR,WAAW,CAAE,KAFjB,GAIJ;AACA,IAAKX,CAAAA,kBAAL,CACI,sCACOmB,KADP,MAEIN,gBAAgB,CAAE,IAFtB,GAIJ;AACA,IAAKZ,CAAAA,kBAAL,IACYuB,CAAAA,KADZ,CACsBJ,MAAM,CAACG,OAD7B,CACYC,KADZ,CAEI,sCACOL,KADP,MAEIJ,UAAU,CAAES,KAFhB,CAGIX,gBAAgB,CAAE,KAHtB,GAKJ;AACA,IAAKX,CAAAA,mBAAL,qBACuCkB,MAAM,CAACG,OAD9C,CACYf,KADZ,iBACYA,KADZ,CACmBC,SADnB,iBACmBA,SADnB,CAC8BC,IAD9B,iBAC8BA,IAD9B,CAEI,sCACOS,KADP,MAEIX,KAAK,CAALA,KAFJ,CAGIC,SAAS,CAATA,SAHJ,CAIIC,IAAI,CAAJA,IAJJ,CAKIE,eAAe,CAAE,IALrB,CAMID,WAAW,CAAE,KANjB,CAOIE,gBAAgB,CAAE,KAPtB,GASJ;AACA,IAAKV,CAAAA,WAAL,CACI,sCACOI,YADP,MAEII,WAAW,CAAE,KAFjB,GAIJ,IAAKN,CAAAA,mBAAL,CACI,sCACOc,KADP,MAEIL,iBAAiB,CAAE,IAFvB,GAIJ,IAAKV,CAAAA,mBAAL,IACYa,CAAAA,aADZ,CAC8BG,MAAM,CAACG,OADrC,CACYN,aADZ,CAEI,sCACOE,KADP,MAEIL,iBAAiB,CAAE,KAFvB,CAGIG,aAAa,CAAEA,aAHnB,GAKJ,IAAKX,CAAAA,mBAAL,IACYU,CAAAA,WADZ,CAC4BI,MAAM,CAACG,OADnC,CACYP,WADZ,CAEI,sCACOG,KADP,MAEIL,iBAAiB,CAAE,KAFvB,CAGIE,WAAW,CAAEA,WAHjB,GAMJ,QACI,MAAOG,CAAAA,KAAP,CAlER,CAoEH,CArED,CAuEA,cAAeD,CAAAA,IAAf","sourcesContent":["import {\n    VERIFY_TOKEN_STARTED, VERIFY_TOKEN_END,\n    USER_LOGIN_STARTED, USER_LOGIN_FAILURE,\n    VERIFY_USER_SUCCESS, USER_LOGOUT, USER_SIGNUP_SUCCESS, USER_SIGNUP_STARTED, USER_SIGNUP_FAILURE,\n} from \"../actions/actionTypes\";\n\n// define initial state of auth reducer\nconst initialState = {\n    token: null, // manage the access token\n    expiredAt: null, // manage expiry time of the access token\n    user: null, // manage the user details\n    authLoading: true, // to indicate that the auth API is in progress\n    isAuthenticated: false, // consider as a authentication flag\n    userLoginLoading: false, // to indicate that the user signin API is in progress\n    userSignupLoading: false, //to indicate that the user signup API is in progress\n    loginError: null, // manage the error of the user signin API\n    signupError: null, //manage the error of the user signup API \n    signupSuccess: null //manage the scuccess message of the signup\n}\n\n// update store based on type and payload and return the state\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        // verify token - started\n        case VERIFY_TOKEN_STARTED:\n            const { silentAuth } = action.payload;\n            return silentAuth ? {\n                ...state\n            } : initialState;\n        // verify token - ended/failed\n        case VERIFY_TOKEN_END:\n            return {\n                ...state,\n                authLoading: false\n            };\n        // user login - started\n        case USER_LOGIN_STARTED:\n            return {\n                ...state,\n                userLoginLoading: true\n            };\n        // user login - ended/failed\n        case USER_LOGIN_FAILURE:\n            const { error } = action.payload;\n            return {\n                ...state,\n                loginError: error,\n                userLoginLoading: false\n            };\n        // verify token - success\n        case VERIFY_USER_SUCCESS:\n            const { token, expiredAt, user } = action.payload;\n            return {\n                ...state,\n                token,\n                expiredAt,\n                user,\n                isAuthenticated: true,\n                authLoading: false,\n                userLoginLoading: false\n            }\n        // handle user logout\n        case USER_LOGOUT:\n            return {\n                ...initialState,\n                authLoading: false\n            }\n        case USER_SIGNUP_STARTED:\n            return {\n                ...state,\n                userSignupLoading: true\n            }\n        case USER_SIGNUP_SUCCESS:\n            const { signupSuccess } = action.payload;\n            return {\n                ...state,\n                userSignupLoading: false,\n                signupSuccess: signupSuccess\n            }\n        case USER_SIGNUP_FAILURE:\n            const { signupError } = action.payload;\n            return {\n                ...state,\n                userSignupLoading: false,\n                signupError: signupError\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}