{"ast":null,"code":"import { verifyTokenStarted, verifyUserSuccess, verifyTokenEnd, userLoginStarted, userLoginFailure, userLogout } from \"../actions/authActions\";\nimport { verifyTokenService, userLoginService, userLogoutService } from '../services/auth'; //handle verify token\n\nexport const verifyTokenAsync = (silentAuth = false) => async dispatch => {\n  dispatch(verifyTokenStarted(silentAuth));\n  const result = await verifyTokenService();\n\n  if (result.error) {\n    dispatch(verifyTokenEnd());\n    if (result.response && [401, 403].includes(result.response.status)) dispatch(userLogout());\n    return;\n  }\n\n  if (result.status === 204) dispatch(verifyTokenEnd());else {\n    dispatch(verifyUserSuccess(result.data));\n  }\n}; // handle user login\n\nexport const userLoginAsync = (username, password) => async dispatch => {\n  dispatch(userLoginStarted());\n  const result = await userLoginService(username, password);\n\n  if (result.error) {\n    dispatch(userLoginFailure(result.response.data.message));\n    return;\n  }\n\n  dispatch(verifyUserSuccess(result.data));\n}; // handle user logout\n\nexport const userLogoutAsync = () => dispatch => {\n  dispatch(userLogout());\n  userLogoutService();\n}; //handle user signup\n\nexport const userSignupAsync = () => dispatch => {};","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/asyncActions/authAsyncActions.js"],"names":["verifyTokenStarted","verifyUserSuccess","verifyTokenEnd","userLoginStarted","userLoginFailure","userLogout","verifyTokenService","userLoginService","userLogoutService","verifyTokenAsync","silentAuth","dispatch","result","error","response","includes","status","data","userLoginAsync","username","password","message","userLogoutAsync","userSignupAsync"],"mappings":"AAAA,SACIA,kBADJ,EACwBC,iBADxB,EAC2CC,cAD3C,EAEIC,gBAFJ,EAEsBC,gBAFtB,EAEwCC,UAFxC,QAGO,wBAHP;AAIA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,iBAA/C,QAAwE,kBAAxE,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,UAAU,GAAG,KAAd,KAAwB,MAAMC,QAAN,IAAkB;AACtEA,EAAAA,QAAQ,CAACX,kBAAkB,CAACU,UAAD,CAAnB,CAAR;AAEA,QAAME,MAAM,GAAG,MAAMN,kBAAkB,EAAvC;;AAEA,MAAIM,MAAM,CAACC,KAAX,EAAkB;AACdF,IAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACA,QAAIU,MAAM,CAACE,QAAP,IAAmB,CAAC,GAAD,EAAM,GAAN,EAAWC,QAAX,CAAoBH,MAAM,CAACE,QAAP,CAAgBE,MAApC,CAAvB,EACIL,QAAQ,CAACN,UAAU,EAAX,CAAR;AACJ;AACH;;AAED,MAAIO,MAAM,CAACI,MAAP,KAAkB,GAAtB,EACIL,QAAQ,CAACT,cAAc,EAAf,CAAR,CADJ,KAEK;AACDS,IAAAA,QAAQ,CAACV,iBAAiB,CAACW,MAAM,CAACK,IAAR,CAAlB,CAAR;AACH;AACJ,CAjBM,C,CAmBP;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAMT,QAAN,IAAkB;AACpEA,EAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AAEA,QAAMS,MAAM,GAAG,MAAML,gBAAgB,CAACY,QAAD,EAAWC,QAAX,CAArC;;AAEA,MAAIR,MAAM,CAACC,KAAX,EAAkB;AACdF,IAAAA,QAAQ,CAACP,gBAAgB,CAACQ,MAAM,CAACE,QAAP,CAAgBG,IAAhB,CAAqBI,OAAtB,CAAjB,CAAR;AACA;AACH;;AAEDV,EAAAA,QAAQ,CAACV,iBAAiB,CAACW,MAAM,CAACK,IAAR,CAAlB,CAAR;AACH,CAXM,C,CAaP;;AACA,OAAO,MAAMK,eAAe,GAAG,MAAMX,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAG,EAAAA,iBAAiB;AACpB,CAHM,C,CAKP;;AACA,OAAO,MAAMe,eAAe,GAAG,MAAMZ,QAAQ,IAAI,CAEhD,CAFM","sourcesContent":["import {\n    verifyTokenStarted, verifyUserSuccess, verifyTokenEnd,\n    userLoginStarted, userLoginFailure, userLogout\n} from \"../actions/authActions\";\nimport { verifyTokenService, userLoginService, userLogoutService } from '../services/auth';\n\n//handle verify token\nexport const verifyTokenAsync = (silentAuth = false) => async dispatch => {\n    dispatch(verifyTokenStarted(silentAuth));\n\n    const result = await verifyTokenService();\n\n    if (result.error) {\n        dispatch(verifyTokenEnd());\n        if (result.response && [401, 403].includes(result.response.status))\n            dispatch(userLogout());\n        return;\n    }\n\n    if (result.status === 204)\n        dispatch(verifyTokenEnd());\n    else {\n        dispatch(verifyUserSuccess(result.data));\n    }\n}\n\n// handle user login\nexport const userLoginAsync = (username, password) => async dispatch => {\n    dispatch(userLoginStarted());\n\n    const result = await userLoginService(username, password);\n\n    if (result.error) {\n        dispatch(userLoginFailure(result.response.data.message));\n        return;\n    }\n\n    dispatch(verifyUserSuccess(result.data));\n}\n\n// handle user logout\nexport const userLogoutAsync = () => dispatch => {\n    dispatch(userLogout());\n    userLogoutService();\n}\n\n//handle user signup\nexport const userSignupAsync = () => dispatch => {\n    \n}\n\n"]},"metadata":{},"sourceType":"module"}