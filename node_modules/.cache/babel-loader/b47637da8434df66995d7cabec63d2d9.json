{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sleniart/projects/react-front/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { verifyTokenAsync, userLogoutAsync } from \"./asyncActions/authAsyncActions\";\nimport { userLogout, verifyTokenEnd } from \"./actions/authActions\";\nimport { setAuthToken } from './services/auth';\nimport { getUserProfileService } from './services/user';\n\nfunction Dashboard() {\n  _s();\n\n  const dispatch = useDispatch();\n  const authObj = useSelector(state => state.auth);\n  const {\n    user,\n    token,\n    expiredAt\n  } = authObj;\n  const [userList, setUserList] = useState([]); // handle click event of the logout button\n\n  const handleLogout = () => {\n    dispatch(userLogoutAsync());\n  }; // get user profile\n\n\n  const getUserProfile = async () => {\n    const result = await getUserProfile();\n\n    if (result.error) {\n      dispatch(verifyTokenEnd());\n      if (result.response && [401, 403].includes(result.response.status)) dispatch(userLogout());\n      return;\n    }\n\n    setUserList(result.data);\n  }; // set timer to renew token\n\n\n  useEffect(() => {\n    setAuthToken(token);\n    const verifyTokenTimer = setTimeout(() => {\n      dispatch(verifyTokenAsync(true));\n    }, moment(expiredAt).diff() - 10 * 1000);\n    return () => {\n      clearTimeout(verifyTokenTimer);\n    };\n  }, [expiredAt, token]); // get user list on page load\n\n  useEffect(() => {\n    getUserProfile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Welcome \", user.name, \"!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: handleLogout,\n      value: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 74\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: getUserProfile,\n      value: \"Get Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 78\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"User List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(userList, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"AaZPweQE2yw8RSjtaVrk6m4SFhk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/Dashboard.js"],"names":["React","useEffect","useState","useDispatch","useSelector","moment","verifyTokenAsync","userLogoutAsync","userLogout","verifyTokenEnd","setAuthToken","getUserProfileService","Dashboard","dispatch","authObj","state","auth","user","token","expiredAt","userList","setUserList","handleLogout","getUserProfile","result","error","response","includes","status","data","verifyTokenTimer","setTimeout","diff","clearTimeout","name","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,iCAAlD;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,uBAA3C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,qBAAT,QAAsC,iBAAtC;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,OAAO,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA3B;AAEA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA6BL,OAAnC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC,CANmB,CAQnB;;AACA,QAAMoB,YAAY,GAAG,MAAM;AACzBT,IAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;AACD,GAFD,CATmB,CAanB;;;AACA,QAAMgB,cAAc,GAAG,YAAY;AACjC,UAAMC,MAAM,GAAG,MAAMD,cAAc,EAAnC;;AACA,QAAIC,MAAM,CAACC,KAAX,EAAkB;AAChBZ,MAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACA,UAAIe,MAAM,CAACE,QAAP,IAAmB,CAAC,GAAD,EAAM,GAAN,EAAWC,QAAX,CAAoBH,MAAM,CAACE,QAAP,CAAgBE,MAApC,CAAvB,EACEf,QAAQ,CAACL,UAAU,EAAX,CAAR;AACF;AACD;;AACDa,IAAAA,WAAW,CAACG,MAAM,CAACK,IAAR,CAAX;AACD,GATD,CAdmB,CAyBnB;;;AACA5B,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACA,UAAMY,gBAAgB,GAAGC,UAAU,CAAC,MAAM;AACxClB,MAAAA,QAAQ,CAACP,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACD,KAFkC,EAEhCD,MAAM,CAACc,SAAD,CAAN,CAAkBa,IAAlB,KAA2B,KAAK,IAFA,CAAnC;AAGA,WAAO,MAAM;AACXC,MAAAA,YAAY,CAACH,gBAAD,CAAZ;AACD,KAFD;AAGD,GARQ,EAQN,CAACX,SAAD,EAAYD,KAAZ,CARM,CAAT,CA1BmB,CAoCnB;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACWN,IAAI,CAACiB,IADhB,oBACsB;AAAA;AAAA;AAAA;AAAA,YADtB,eAC4B;AAAA;AAAA;AAAA;AAAA,YAD5B,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEZ,YAA9B;AAA4C,MAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF,eAE+D;AAAA;AAAA;AAAA;AAAA,YAF/D,eAEqE;AAAA;AAAA;AAAA;AAAA,YAFrE,eAGE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,OAAO,EAAEC,cAA9B;AAA8C,MAAA,KAAK,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YAHF,eAGmE;AAAA;AAAA;AAAA;AAAA,YAHnE,eAGyE;AAAA;AAAA;AAAA;AAAA,YAHzE,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAMY,IAAI,CAACC,SAAL,CAAehB,QAAf,EAAyB,IAAzB,EAA+B,CAA/B;AAAN;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlDQR,S;UAEUT,W,EACDC,W;;;KAHTQ,S;AAoDT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n \nimport { verifyTokenAsync, userLogoutAsync } from \"./asyncActions/authAsyncActions\";\nimport { userLogout, verifyTokenEnd } from \"./actions/authActions\";\n \nimport { setAuthToken } from './services/auth';\nimport { getUserProfileService } from './services/user';\n \nfunction Dashboard() {\n \n  const dispatch = useDispatch();\n  const authObj = useSelector(state => state.auth);\n \n  const { user, token, expiredAt } = authObj;\n  const [userList, setUserList] = useState([]);\n \n  // handle click event of the logout button\n  const handleLogout = () => {\n    dispatch(userLogoutAsync());\n  }\n \n  // get user profile\n  const getUserProfile = async () => {\n    const result = await getUserProfile();\n    if (result.error) {\n      dispatch(verifyTokenEnd());\n      if (result.response && [401, 403].includes(result.response.status))\n        dispatch(userLogout());\n      return;\n    }\n    setUserList(result.data);\n  }\n \n  // set timer to renew token\n  useEffect(() => {\n    setAuthToken(token);\n    const verifyTokenTimer = setTimeout(() => {\n      dispatch(verifyTokenAsync(true));\n    }, moment(expiredAt).diff() - 10 * 1000);\n    return () => {\n      clearTimeout(verifyTokenTimer);\n    }\n  }, [expiredAt, token])\n \n  // get user list on page load\n  useEffect(() => {\n    getUserProfile();\n  }, []);\n \n  return (\n    <div>\n      Welcome {user.name}!<br /><br />\n      <input type=\"button\" onClick={handleLogout} value=\"Logout\" /><br /><br />\n      <input type=\"button\" onClick={getUserProfile} value=\"Get Data\" /><br /><br />\n      <b>User List:</b>\n      <pre>{JSON.stringify(userList, null, 2)}</pre>\n    </div>\n  );\n}\n \nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}