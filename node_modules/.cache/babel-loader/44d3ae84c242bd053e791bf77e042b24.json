{"ast":null,"code":"import Cookies from \"universal-cookie\";\nimport axios from 'axios';\nconst cookies = new Cookies();\nexport const getToken = () => {\n  return cookies.get('x-access-token');\n};\nexport const getUser = async () => {\n  await axios.get('http://localhost:4202/profile', {\n    withCredentials: true\n  }).then(response => {\n    return response.data.user;\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n};","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/Utils/Common.js"],"names":["Cookies","axios","cookies","getToken","get","getUser","withCredentials","then","response","data","user","catch","error","console","log","setUserSession","token","sessionStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AAGA,OAAO,MAAMG,QAAQ,GAAG,MAAM;AAC1B,SAAOD,OAAO,CAACE,GAAR,CAAY,gBAAZ,CAAP;AACH,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAG,YAAW;AAC9B,QAAMJ,KAAK,CAACG,GAAN,CAAU,+BAAV,EAA2C;AAAEE,IAAAA,eAAe,EAAE;AAAnB,GAA3C,EACLC,IADK,CACAC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,CAAcC,IAArB;AACH,GAHK,EAGHC,KAHG,CAGGC,KAAK,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GALK,CAAN;AAMH,CAPM;AASP,OAAO,MAAMG,cAAc,GAAG,CAACC,KAAD,EAAQN,IAAR,KAAiB;AAC3CO,EAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,KAAhC;AACAC,EAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAA/B;AACH,CAHM","sourcesContent":["import Cookies from \"universal-cookie\"\nimport axios from 'axios';\nconst cookies = new Cookies();\n\n\nexport const getToken = () => {\n    return cookies.get('x-access-token');\n}\n\nexport const getUser = async() => {\n    await axios.get('http://localhost:4202/profile', { withCredentials: true })\n    .then(response => {\n        return response.data.user;\n    }).catch(error => {\n        console.log(error);\n    })\n}\n\nexport const setUserSession = (token, user) => {\n    sessionStorage.setItem('token', token);\n    sessionStorage.setItem('user', JSON.stringify(user));\n}"]},"metadata":{},"sourceType":"module"}