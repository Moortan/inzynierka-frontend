{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sleniart/projects/react-front/src/Utils/PublicRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken, isLogged } from './Common'; // handle the public routes\n\nfunction PublicRoute({\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isLogged() ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/dashboard'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 67\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/Utils/PublicRoute.js"],"names":["React","Route","Redirect","getToken","isLogged","PublicRoute","component","Component","rest","props","pathname"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,UAAnC,C,CAEA;;AACA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAArB,EAAwD;AACtD,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAW,CAACL,QAAQ,EAAT,gBAAc,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAd,gBAAyC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA;AAF9D;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAPQL,W;AAST,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getToken, isLogged } from './Common'\n\n// handle the public routes\nfunction PublicRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => !isLogged() ? <Component {...props} /> : <Redirect to={{ pathname: '/dashboard' }} />}\n    />\n  )\n}\n\nexport default PublicRoute;"]},"metadata":{},"sourceType":"module"}