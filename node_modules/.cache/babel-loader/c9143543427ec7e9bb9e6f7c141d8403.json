{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sleniart/projects/react-front/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sleniart/projects/react-front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{verifyTokenStarted,verifyUserSuccess,verifyTokenEnd,userLoginStarted,userLoginFailure,userLogout,userSignupStarted,userSignupFailure,userSignupSuccess,addTeamStarted,addTeamFailure,addTeamSuccess}from\"../actions/authActions\";import{verifyTokenService,userLoginService,userLogoutService,userSignupService}from'../services/auth';import{addTeamService}from\"../services/teams\";//handle verify token\nexport var verifyTokenAsync=function verifyTokenAsync(){var silentAuth=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(verifyTokenStarted(silentAuth));_context.next=3;return verifyTokenService();case 3:result=_context.sent;if(!result.error){_context.next=8;break;}dispatch(verifyTokenEnd());if(result.response&&[401,403].includes(result.response.status))dispatch(userLogout());return _context.abrupt(\"return\");case 8:if(result.status===204)dispatch(verifyTokenEnd());else{dispatch(verifyUserSuccess(result.data));}case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// handle user login\nexport var userLoginAsync=function userLoginAsync(username,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(userLoginStarted());_context2.next=3;return userLoginService(username,password);case 3:result=_context2.sent;if(!result.error){_context2.next=7;break;}dispatch(userLoginFailure(result.response.data));return _context2.abrupt(\"return\");case 7:dispatch(verifyUserSuccess(result.data));case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// handle user logout\nexport var userLogoutAsync=function userLogoutAsync(){return function(dispatch){dispatch(userLogout());userLogoutService();};};//handle user signup\nexport var userSignupAsync=function userSignupAsync(email,username,password){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch(userSignupStarted());_context3.next=3;return userSignupService(email,username,password);case 3:result=_context3.sent;if(!result.error){_context3.next=7;break;}dispatch(userSignupFailure(result.response.data.message));return _context3.abrupt(\"return\");case 7:dispatch(userSignupSuccess(result.response));case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};//handle adding new team\nexport var addTeamAsync=function addTeamAsync(teamLeader,teamName,teamMembers,teamTag,game){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var result;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch(addTeamStarted());_context4.next=3;return addTeamService(teamLeader,teamName,teamMembers,teamTag,game);case 3:result=_context4.sent;if(!result.error){_context4.next=7;break;}dispatch(addTeamFailure(result.response.data.message));return _context4.abrupt(\"return\");case 7:dispatch(addTeamSuccess(result.response));case 8:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/asyncActions/authAsyncActions.js"],"names":["verifyTokenStarted","verifyUserSuccess","verifyTokenEnd","userLoginStarted","userLoginFailure","userLogout","userSignupStarted","userSignupFailure","userSignupSuccess","addTeamStarted","addTeamFailure","addTeamSuccess","verifyTokenService","userLoginService","userLogoutService","userSignupService","addTeamService","verifyTokenAsync","silentAuth","dispatch","result","error","response","includes","status","data","userLoginAsync","username","password","userLogoutAsync","userSignupAsync","email","message","addTeamAsync","teamLeader","teamName","teamMembers","teamTag","game"],"mappings":"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","sourcesContent":["import {\n    verifyTokenStarted, verifyUserSuccess, verifyTokenEnd,\n    userLoginStarted, userLoginFailure, userLogout, userSignupStarted, userSignupFailure, userSignupSuccess, addTeamStarted, addTeamFailure, addTeamSuccess\n} from \"../actions/authActions\";\nimport { verifyTokenService, userLoginService, userLogoutService, userSignupService } from '../services/auth';\nimport { addTeamService } from \"../services/teams\";\n\n//handle verify token\nexport const verifyTokenAsync = (silentAuth = false) => async dispatch => {\n    dispatch(verifyTokenStarted(silentAuth));\n\n    const result = await verifyTokenService();\n\n    if (result.error) {\n        dispatch(verifyTokenEnd());\n        if (result.response && [401, 403].includes(result.response.status))\n            dispatch(userLogout());\n        return;\n    }\n\n    if (result.status === 204)\n        dispatch(verifyTokenEnd());\n    else {\n        dispatch(verifyUserSuccess(result.data));\n    }\n}\n\n// handle user login\nexport const userLoginAsync = (username, password) => async dispatch => {\n    dispatch(userLoginStarted());\n\n    const result = await userLoginService(username, password);\n\n    if (result.error) {\n        dispatch(userLoginFailure(result.response.data));\n        return;\n    }\n\n    dispatch(verifyUserSuccess(result.data));\n}\n\n// handle user logout\nexport const userLogoutAsync = () => dispatch => {\n    dispatch(userLogout());\n    userLogoutService();\n}\n\n//handle user signup\nexport const userSignupAsync = (email, username, password) => async dispatch => {\n    dispatch(userSignupStarted());\n\n    const result = await userSignupService(email, username, password);\n\n    if(result.error) {\n        dispatch(userSignupFailure(result.response.data.message));\n        return;\n    }\n\n    dispatch(userSignupSuccess(result.response));\n}\n\n//handle adding new team\nexport const addTeamAsync = ( teamLeader, teamName, teamMembers, teamTag, game) => async dispatch => {\n    dispatch(addTeamStarted());\n\n    const result = await addTeamService( teamLeader, teamName, teamMembers, teamTag, game);\n\n    if (result.error) {\n        dispatch(addTeamFailure(result.response.data.message));\n        return;\n    }\n\n    dispatch(addTeamSuccess(result.response));\n}\n"]},"metadata":{},"sourceType":"module"}