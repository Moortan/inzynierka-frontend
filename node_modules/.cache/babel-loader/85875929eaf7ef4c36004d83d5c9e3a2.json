{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sleniart/projects/react-front/src/routes/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction PrivateRoute({\n  component: Component,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => rest.isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 49\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 76\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/sleniart/projects/react-front/src/routes/PrivateRoute.js"],"names":["React","Route","Redirect","PrivateRoute","component","Component","rest","props","isAuthenticated","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA+B,kBAA/B;;AAEA,SAASC,YAAT,CAAuB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAvB,EAAyD;AACrD,sBACI,QAAC,KAAD,OACQA,IADR;AAEJ,IAAA,MAAM,EAAKC,KAAD,IAAWD,IAAI,CAACE,eAAL,gBAAuB,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YAAvB,gBAAkD,QAAC,QAAD;AAAU,MAAA,EAAE,EAAI;AAACE,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAd;AAA5B;AAAhB;AAAA;AAAA;AAAA;AAAA;AAFnE;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;KAPQT,Y;AAST,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {Route, Redirect } from 'react-router-dom';\n\nfunction PrivateRoute( {component: Component, ...rest }) {\n    return (\n        <Route \n            {...rest}\n    render = {(props) => rest.isAuthenticated ? <Component {...props} /> : <Redirect to = {{pathname: '/login', state: { from: props.location} }} /> }\n    />\n    )\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}