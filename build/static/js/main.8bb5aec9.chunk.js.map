{"version":3,"sources":["actions/actionTypes.js","services/auth.js","actions/authActions.js","services/teams.js","asyncActions/authAsyncActions.js","pages/Login.js","services/user.js","pages/Profile.js","pages/Home.js","pages/Signup.js","pages/AddTeam.js","routes/PrivateRoute.js","routes/PublicRoute.js","App.js","reportWebVitals.js","reducers/authReducer.js","reducers/teamReducer.js","reducers/index.js","store.js","index.js"],"names":["VERIFY_TOKEN_STARTED","VERIFY_TOKEN_END","USER_LOGIN_STARTED","USER_LOGIN_FAILURE","VERIFY_USER_SUCCESS","USER_LOGOUT","USER_SIGNUP_STARTED","USER_SIGNUP_FAILURE","USER_SIGNUP_SUCCESS","ADD_TEAM_STARTED","ADD_TEAM_FAILURE","ADD_TEAM_SUCCESS","axios","defaults","withCredentials","API_URL","setAuthToken","token","headers","common","verifyTokenService","a","post","error","response","userLoginService","username","password","email","userLogoutService","userSignupService","verifyTokenStarted","silentAuth","type","payload","verifyTokenEnd","verifyUserSuccess","expiredAt","user","userLoginFailure","userLogout","userSignupFailure","signupError","userSignupSuccess","signupSuccess","addTeamFailure","addTeamError","addTeamSuccess","addTeamMessage","addTeamService","teamLeader","teamName","teamMembers","teamTag","game","verifyTokenAsync","dispatch","result","includes","status","data","useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","authObj","useSelector","state","auth","useDispatch","userLoginLoading","loginError","autoComplete","style","marginTop","onClick","userLoginAsync","disabled","color","getUserProfileService","get","getUserTeamsService","Profile","userProfile","setUserProfile","userTeams","setUserTeams","getUserProfile","getUserTeams","teams","useEffect","verifyTokenTimer","setTimeout","moment","diff","clearTimeout","name","id","map","index","Home","Signup","userSignupLoading","message","userSignupAsync","AddTeam","teamObj","team","addTeamLoading","teamMember1","teamMember2","teamMember3","teamMember4","teamMember5","addTeamAsync","PrivateRoute","Component","component","rest","render","props","isAuthenticated","to","pathname","from","location","PublicRoute","App","authLoading","className","exact","activeClassName","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","appReducer","combineReducers","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.8bb5aec9.chunk.js","sourcesContent":["export const VERIFY_TOKEN_STARTED = 'VERIFY_TOKEN_STARTED';\nexport const VERIFY_TOKEN_END = 'VERIFY_TOKEN_END';\n \nexport const USER_LOGIN_STARTED = 'USER_LOGIN_STARTED';\nexport const USER_LOGIN_FAILURE = 'USER_LOGIN_FAILURE';\n \nexport const VERIFY_USER_SUCCESS = 'VERIFY_USER_SUCCESS';\nexport const USER_LOGOUT = 'USER_LOGOUT';\n\nexport const USER_SIGNUP_STARTED = 'USER_SIGNUP_STARTED';\nexport const USER_SIGNUP_FAILURE = 'USER_SIGNUP_FAILURE';\nexport const USER_SIGNUP_SUCCESS = 'USER_SIGNUP_SUCCESS';\n\nexport const ADD_TEAM_STARTED = 'ADD_TEAM_STARTED';\nexport const ADD_TEAM_FAILURE = 'ADD_TEAM_FAILURE';\nexport const ADD_TEAM_SUCCESS = 'ADD_TEAM_SUCCESS';","import axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst API_URL = 'http://localhost:4202';\n\n//bind token to the axios\nexport const setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\n//verify refresh token to generate new access token\nexport const verifyTokenService = async() => {\n    try {\n        return await axios.post(`${API_URL}/verifyTokens`);\n    }catch (err) {\n        return {\n            error: true,\n            response: err.response\n        }\n    }\n}\n\n//login api\nexport const userLoginService = async(username, password) => {\n    try {\n        return await axios.post(`${API_URL}/login`, {email: username, password: password});\n    } catch(err) {\n        return {\n            error: true,\n            response: err.response\n        }\n    }\n}\n\n//logout api\nexport const userLogoutService = async() => {\n    try {\n        return await axios.post(`${API_URL}/logout`);\n    } catch(err) {\n        return {\n            error: err,\n            response: err.response\n        }\n    }\n}\n\nexport const userSignupService = async(email, username, password) => {\n    try {\n        return await axios.post(`${API_URL}/signup`, {email: email, username: username, password: password});\n    } catch(err) {\n        return {\n            error: err,\n            response: err.response\n        }\n    }\n}\n","import {\n    VERIFY_TOKEN_STARTED, VERIFY_USER_SUCCESS, VERIFY_TOKEN_END,\n    USER_LOGIN_STARTED, USER_LOGIN_FAILURE, USER_LOGOUT, USER_SIGNUP_FAILURE, USER_SIGNUP_SUCCESS, USER_SIGNUP_STARTED,\n    ADD_TEAM_FAILURE, ADD_TEAM_SUCCESS, ADD_TEAM_STARTED\n  } from \"./actionTypes\";\n\nimport { setAuthToken } from '../services/auth';\n\n//start to verify token\nexport const verifyTokenStarted = (silentAuth = false) => {\n    return {\n        type: VERIFY_TOKEN_STARTED,\n        payload: {\n            silentAuth\n        }\n    }\n}\n\n//if verify token ends or fails\nexport const verifyTokenEnd = () => {\n    return {\n        type: VERIFY_TOKEN_END\n    }\n}\n\n//if verify token success\nexport const verifyUserSuccess = ({token, expiredAt, user }) => {\n    return {\n        type: VERIFY_USER_SUCCESS,\n        payload: {\n            token,\n            expiredAt,\n            user\n        }\n    }\n}\n\n\n//user login starts\nexport const userLoginStarted = () => {\n    return {\n        type: USER_LOGIN_STARTED\n    }\n}\n\n//user login fails\nexport const userLoginFailure = (error = 'Something went wrong. Please try again later') => {\n    return {\n        type: USER_LOGIN_FAILURE,\n        payload: {\n            error\n        }\n    }\n}\n\nexport const userLogout = () => {\n    setAuthToken();\n    return {\n        type: USER_LOGOUT\n    }\n}\n\nexport const userSignupStarted = () => {\n    return {\n        type: USER_SIGNUP_STARTED\n    }\n}\n\nexport const userSignupFailure = (signupError = 'Something went wrong. Please try again later') => {\n    return {\n        type: USER_SIGNUP_FAILURE,\n        payload: {\n            signupError\n        }\n    }\n}\n\nexport const userSignupSuccess = (signupSuccess = 'You have created new accout. Please log in to continue') => {\n    return {\n        type: USER_SIGNUP_SUCCESS,\n        payload: {\n            signupSuccess\n        }\n    }\n}\n\nexport const addTeamStarted = () => {\n    return {\n        type: ADD_TEAM_STARTED\n    }\n}\n\nexport const addTeamFailure = (addTeamError = 'Something went wrong. Please try again later') => {\n    return {\n        type: ADD_TEAM_FAILURE,\n        payload: {\n            addTeamError\n        }    \n    }\n}\n\nexport const addTeamSuccess = (addTeamMessage = 'Team has been created') => {\n    return {\n        type: ADD_TEAM_SUCCESS,\n        payload: {\n            addTeamMessage \n        }\n    }\n}\n\n","import axios from 'axios'\n\nconst API_URL = 'http://localhost:4202';\n\nexport const addTeamService = async(teamLeader, teamName, teamMembers, teamTag, game ) => {\n    try {\n        return await axios.post(`${API_URL}/teams`, {teamLeader: teamLeader, teamName: teamName,\n                                                     teamMembers: teamMembers, teamTag: teamTag, game: game})\n    } catch(err) {\n        return {\n            error: true,\n            response: err.response\n        }\n    }\n}\n","import {\n    verifyTokenStarted, verifyUserSuccess, verifyTokenEnd,\n    userLoginStarted, userLoginFailure, userLogout, userSignupStarted, userSignupFailure, userSignupSuccess, addTeamStarted, addTeamFailure, addTeamSuccess\n} from \"../actions/authActions\";\nimport { verifyTokenService, userLoginService, userLogoutService, userSignupService } from '../services/auth';\nimport { addTeamService } from \"../services/teams\";\n\n//handle verify token\nexport const verifyTokenAsync = (silentAuth = false) => async dispatch => {\n    dispatch(verifyTokenStarted(silentAuth));\n\n    const result = await verifyTokenService();\n\n    if (result.error) {\n        dispatch(verifyTokenEnd());\n        if (result.response && [401, 403].includes(result.response.status))\n            dispatch(userLogout());\n        return;\n    }\n\n    if (result.status === 204)\n        dispatch(verifyTokenEnd());\n    else {\n        dispatch(verifyUserSuccess(result.data));\n    }\n}\n\n// handle user login\nexport const userLoginAsync = (username, password) => async dispatch => {\n    dispatch(userLoginStarted());\n\n    const result = await userLoginService(username, password);\n\n    if (result.error) {\n        dispatch(userLoginFailure(result.response.data));\n        return;\n    }\n\n    dispatch(verifyUserSuccess(result.data));\n}\n\n// handle user logout\nexport const userLogoutAsync = () => dispatch => {\n    dispatch(userLogout());\n    userLogoutService();\n}\n\n//handle user signup\nexport const userSignupAsync = (email, username, password) => async dispatch => {\n    dispatch(userSignupStarted());\n\n    const result = await userSignupService(email, username, password);\n\n    if(result.error) {\n        dispatch(userSignupFailure(result.response.data.message));\n        return;\n    }\n\n    dispatch(userSignupSuccess(result.response));\n}\n\n//handle adding new team\nexport const addTeamAsync = ( teamLeader, teamName, teamMembers, teamTag, game) => async dispatch => {\n    dispatch(addTeamStarted());\n\n    const result = await addTeamService( teamLeader, teamName, teamMembers, teamTag, game);\n\n    if (result.error) {\n        dispatch(addTeamFailure(result.response.data.message));\n        return;\n    }\n\n    dispatch(addTeamSuccess(result.response));\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n \nimport { userLoginAsync } from '../asyncActions/authAsyncActions';\n\n\nfunction Login() {\n    \n\n    const authObj = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const { userLoginLoading, loginError } = authObj;\n    \n    const username = useFormInput('');\n    const password = useFormInput('');\n\n    //handle button for login\n    const handleLogin = () => {\n        dispatch(userLoginAsync(username.value, password.value));\n    }\n\n    return (\n        <div>\n            Login<br /><br />\n            <div>\n                Username<br />\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n            </div>\n            <div style={{ marginTop: 10 }}>\n                Password<br />\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n            </div>\n            <input \n            type=\"button\" \n            style = {{ marginTop: 10}}\n            value={userLoginLoading ? 'Loading...' : 'Login'} \n            onClick={handleLogin} \n            disabled={userLoginLoading} />\n        {loginError && <div style = {{color: 'red', marginTop: 10 }}> {loginError}</div>}\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default Login;","import axios from 'axios'\n\nconst API_URL = 'http://localhost:4202';\n\nexport const getUserProfileService = async() => {\n    try {\n        return await axios.get(`${API_URL}/profile`)\n    } catch(err) {\n        return {\n            error: true,\n            response: err.response\n        }\n    }\n}\n\nexport const getUserTeamsService = async() => {\n    try {\n        return await axios.get(`${API_URL}/myteams`)\n    } catch(err) {\n        return {\n            error: true,\n            response: err.response\n        }\n    }\n}","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { verifyTokenAsync, userLogoutAsync } from \"../asyncActions/authAsyncActions\";\nimport { userLogout, verifyTokenEnd } from \"../actions/authActions\";\n\nimport { setAuthToken } from '../services/auth';\nimport { getUserProfileService, getUserTeamsService } from '../services/user';\n\nfunction Profile() {\n\n  const dispatch = useDispatch();\n  const authObj = useSelector(state => state.auth);\n\n  const { user, token, expiredAt } = authObj;\n  const [userProfile, setUserProfile] = useState([]);\n  const [userTeams, setUserTeams] = useState([]);\n\n  // handle click event of the logout button\n  const handleLogout = () => {\n    dispatch(userLogoutAsync());\n  }\n\n  // get user profile\n  const getUserProfile = async () => {\n    const result = await getUserProfileService();\n    if (result.error) {\n      dispatch(verifyTokenEnd());\n      if (result.response && [401, 403].includes(result.response.status))\n        dispatch(userLogout());\n      return;\n    }\n    setUserProfile(result.data);\n  }\n\n  const getUserTeams = async () => {\n    const result = await getUserTeamsService();\n    if (result.error) {\n      dispatch(verifyTokenEnd());\n      if (result.response && [401, 403].includes(result.response.status))\n        dispatch(userLogout());\n      return;\n    }\n    setUserTeams(result.data.teams);\n  }\n\n  // set timer to renew token\n  useEffect(() => {\n    setAuthToken(token);\n    const verifyTokenTimer = setTimeout(() => {\n      dispatch(verifyTokenAsync(true));\n    }, moment(expiredAt).diff() - 10 * 1000);\n    return () => {\n      clearTimeout(verifyTokenTimer);\n    }\n  }, [expiredAt, token])\n\n  // get user items on page load\n  useEffect(() => {\n    getUserProfile();\n    getUserTeams();\n  }, []);\n\n  return (\n    <div>\n      Welcome {user.username}!<br /><br />\n      <input type=\"button\" onClick={handleLogout} value=\"Logout\" /><br /><br />\n      <b>User Data:</b>\n      <p> Email: {userProfile.email} </p>\n      <p> Username: {userProfile.name} </p>\n      <br />\n      <b> Your Teams: </b>\n      <b> </b>\n      <p id=\"teams\"> </p>\n      {userTeams.map((value, index) => {\n        return (\n          <li key={index}> <br />\n          Team Name: {value.teamName} <br />\n          Team Tag: {value.teamTag} <br />\n          Team Members: {value.teamMembers[0]}, {value.teamMembers[1]},\n          {value.teamMembers[2]}, {value.teamMembers[3]}, {value.teamMembers[4]} <br />\n          Game: {value.game} <br />\n\n          </li>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\n\nfunction Home() {\n    return (\n        <div>\n            Welcome to the Home Page!\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n \nimport { userSignupAsync } from '../asyncActions/authAsyncActions';\n\n\nfunction Signup() {\n    \n    const authObj = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const { userSignupLoading, signupError, signupSuccess } = authObj;\n    \n    const email = useFormInput('');\n    const username = useFormInput('');\n    const password = useFormInput('');\n\n    //handle button for login\n    const handleSignup = () => {\n        dispatch(userSignupAsync(email.value, username.value, password.value));\n    }\n\n    if (signupError) {\n\n    }\n\n    return (\n        <div>\n            Create new account<br /><br />\n            <div>\n                Email<br />\n                <input type=\"text\" {...email} autoComplete=\"new-password\" />\n            </div>\n            <div>\n                Username<br />\n                <input type=\"text\" {...username} autoComplete=\"new-password\" />\n            </div>\n            <div style={{ marginTop: 10 }}>\n                Password<br />\n                <input type=\"password\" {...password} autoComplete=\"new-password\" />\n            </div>\n            <input \n            type=\"button\" \n            style = {{ marginTop: 10}}\n            value={userSignupLoading ? 'Loading...' : 'Signup'} \n            onClick={handleSignup} \n            disabled={userSignupLoading} />\n            {signupSuccess \n                ? <div  style = {{color: 'green', marginTop: 10 }}> {signupSuccess}</div>\n                : <div  style = {{color: 'red', marginTop: 10 }}> {signupError}</div>\n            }\n        </div>\n    );\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default Signup;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\n\nimport { verifyTokenAsync } from \"../asyncActions/authAsyncActions\";\nimport { setAuthToken } from '../services/auth';\n\n\n\nimport { addTeamAsync } from '../asyncActions/authAsyncActions'\n\n\nfunction AddTeam() {\n\n    const dispatch = useDispatch();\n    const teamObj = useSelector(state => state.team);\n    const authObj = useSelector(state => state.auth);\n\n    const { addTeamLoading, addTeamError, addTeamMessage} = teamObj;\n    const { user, token, expiredAt } = authObj;\n\n    const teamName = useFormInput('');\n    const teamTag = useFormInput('');\n    const game = useFormInput('');\n    const teamMember1 = useFormInput('');\n    const teamMember2 = useFormInput('');\n    const teamMember3 = useFormInput('');\n    const teamMember4 = useFormInput('');\n    const teamMember5 = useFormInput('');\n\n    const teamMembers = [teamMember1.value, teamMember2.value,\n    teamMember3.value, teamMember4.value, teamMember5.value]\n\n    const handleAddTeam = () => {\n        dispatch(addTeamAsync(user.username, teamName.value, teamMembers,\n            teamTag.value, game.value))\n    }\n\n    // set timer to renew token\n    useEffect(() => {\n        setAuthToken(token);\n        const verifyTokenTimer = setTimeout(() => {\n            dispatch(verifyTokenAsync(true));\n        }, moment(expiredAt).diff() - 10 * 1000);\n        return () => {\n            clearTimeout(verifyTokenTimer);\n        }\n    }, [expiredAt, token])\n\n    return (\n\n        <div>\n            Add a new team <br /><br />\n            <div>\n                Team Name <br />\n                <input type=\"text\" {...teamName} autoComplete=\"off\" />\n            </div>\n            <div style={{ marginTop: 10 }}>\n                Team Tag <br />\n                <input type=\"text\" {...teamTag} autoComplete=\"off\" />\n            </div>\n            <div style={{ marginTop: 10 }}>\n                Game <br />\n                <input type=\"radio\" {...game} value = \"League of Legends\" name = \"game\" autoComplete=\"off\" /> League of Legends <br />\n                <input type=\"radio\" {...game} value = \"Counter Strike: Global Offensive\"name = \"game\" autoComplete=\"off\" /> Couter Strike: Global Offensive <br />\n                <input type=\"radio\" {...game} value = \"Dota 2\"name = \"game\" autoComplete=\"off\" /> Dota 2 <br />\n            </div>\n            <div style={{ marginTop: 10 }}>\n                Team Member #1 <br />\n                <input type=\"text\" {...teamMember1} autoComplete=\"off\" /><br />\n                Team Member #2 <br />\n                <input type=\"text\" {...teamMember2} autoComplete=\"off\" /><br />\n                Team Member #3 <br />\n                <input type=\"text\" {...teamMember3} autoComplete=\"off\" /><br />\n                Team Member #4 <br />\n                <input type=\"text\" {...teamMember4} autoComplete=\"off\" /><br />\n                Team Member #5 <br />\n                <input type=\"text\" {...teamMember5} autoComplete=\"off\" /><br />\n            </div>\n            <input\n                type=\"button\"\n                style={{ marginTop: 10 }}\n                value={addTeamLoading ? 'Adding...' : 'Add new team'}\n                onClick={handleAddTeam}\n                disabled={addTeamLoading} />\n            {addTeamMessage \n                ? <div  style = {{color: 'green', marginTop: 10 }}> {addTeamMessage}</div>\n                : <div  style = {{color: 'red', marginTop: 10 }}> {addTeamError}</div>\n            }\n        </div>\n    )\n}\n\nconst useFormInput = initialValue => {\n    const [value, setValue] = useState(initialValue);\n\n    const handleChange = e => {\n        setValue(e.target.value);\n    }\n    return {\n        value,\n        onChange: handleChange\n    }\n}\n\nexport default AddTeam;","import React from 'react';\nimport {Route, Redirect } from 'react-router-dom';\n\nfunction PrivateRoute( {component: Component, ...rest }) {\n    return (\n        <Route \n            {...rest}\n    render = {(props) => rest.isAuthenticated ? <Component {...props} /> : <Redirect to = {{pathname: '/login', state: { from: props.location} }} /> }\n    />\n    )\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport {Route, Redirect } from 'react-router-dom';\n\nfunction PublicRoute( {component: Component, ...rest }) {\n    return (\n        <Route \n            {...rest}\n    render = {(props) => !rest.isAuthenticated ? <Component {...props} /> : <Redirect to = {{pathname: '/Profile' }} /> }\n    />\n    )\n}\n\nexport default PublicRoute;","import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, NavLink, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport AddTeam from './pages/AddTeam';\n\nimport PrivateRoute from './routes/PrivateRoute';\nimport PublicRoute from './routes/PublicRoute';\n\nimport { verifyTokenAsync } from './asyncActions/authAsyncActions';\n\n\n\nfunction App() {\n\n  const authObj = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  const { authLoading, isAuthenticated } = authObj;\n\n  useEffect(() => {\n    dispatch(verifyTokenAsync());\n  }, []);\n\n  if (authLoading) {\n    return <div className=\"content\"> Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <div className=\"header\">\n            <NavLink exact activeClassName=\"active\" to=\"/\"> Home </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/login\"> Login </NavLink>\n            <NavLink activeClassName=\"active\" to=\"/signup\"> Signup</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/Profile\"> Profile</NavLink>\n            <NavLink activeClassName=\"active\" to=\"/AddTeam\"> Add Team</NavLink>\n\n        </div>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <PublicRoute path=\"/signup\" component={Signup} isAuthenticated={isAuthenticated} />\n            <PublicRoute path=\"/login\" component={Login} isAuthenticated={isAuthenticated} />\n            <PrivateRoute path=\"/Profile\" component={Profile} isAuthenticated={isAuthenticated} />\n            <PrivateRoute path=\"/AddTeam\" component={AddTeam} isAuthenticated={isAuthenticated} />\n\n            <Redirect to={isAuthenticated ? '/Profile' : '/login'} />\n          </Switch>\n        </div>\n        </div>\n      </BrowserRouter>\n    </div >\n\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    VERIFY_TOKEN_STARTED, VERIFY_TOKEN_END,\n    USER_LOGIN_STARTED, USER_LOGIN_FAILURE,\n    VERIFY_USER_SUCCESS, USER_LOGOUT, USER_SIGNUP_SUCCESS, USER_SIGNUP_STARTED, USER_SIGNUP_FAILURE,\n} from \"../actions/actionTypes\";\n\n// define initial state of auth reducer\nconst initialState = {\n    token: null, // manage the access token\n    expiredAt: null, // manage expiry time of the access token\n    user: null, // manage the user details\n    authLoading: true, // to indicate that the auth API is in progress\n    isAuthenticated: false, // consider as a authentication flag\n    userLoginLoading: false, // to indicate that the user signin API is in progress\n    userSignupLoading: false, //to indicate that the user signup API is in progress\n    loginError: null, // manage the error of the user signin API\n    signupError: null, //manage the error of the user signup API \n    signupSuccess: null //manage the scuccess message of the signup\n}\n\n// update store based on type and payload and return the state\nconst auth = (state = initialState, action) => {\n    switch (action.type) {\n        // verify token - started\n        case VERIFY_TOKEN_STARTED:\n            const { silentAuth } = action.payload;\n            return silentAuth ? {\n                ...state\n            } : initialState;\n        // verify token - ended/failed\n        case VERIFY_TOKEN_END:\n            return {\n                ...state,\n                authLoading: false\n            };\n        // user login - started\n        case USER_LOGIN_STARTED:\n            return {\n                ...state,\n                userLoginLoading: true\n            };\n        // user login - ended/failed\n        case USER_LOGIN_FAILURE:\n            const { error } = action.payload;\n            return {\n                ...state,\n                loginError: error,\n                userLoginLoading: false\n            };\n        // verify token - success\n        case VERIFY_USER_SUCCESS:\n            const { token, expiredAt, user } = action.payload;\n            return {\n                ...state,\n                token,\n                expiredAt,\n                user,\n                isAuthenticated: true,\n                authLoading: false,\n                userLoginLoading: false\n            }\n        // handle user logout\n        case USER_LOGOUT:\n            return {\n                ...initialState,\n                authLoading: false\n            }\n        case USER_SIGNUP_STARTED:\n            return {\n                ...state,\n                userSignupLoading: true\n            }\n        case USER_SIGNUP_SUCCESS:\n            const { signupSuccess } = action.payload;\n            return {\n                ...state,\n                userSignupLoading: false,\n                signupSuccess: signupSuccess\n            }\n        case USER_SIGNUP_FAILURE:\n            const { signupError } = action.payload;\n            return {\n                ...state,\n                userSignupLoading: false,\n                signupError: signupError\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default auth;","import {\n    ADD_TEAM_STARTED, ADD_TEAM_FAILURE, ADD_TEAM_SUCCESS\n} from \"../actions/actionTypes\";\n\n// define initial state of auth reducer\nconst initialState = {\n    team: null, //manage team details\n    addTeamLoading: false, //to indicate that the adding team API is in progress\n    addTeamError: null, //manage the error of the adding team API\n    addTeamMessage: null\n}\n\nconst team = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TEAM_STARTED:\n            return {\n                ...state,\n                addTeamLoading: true\n            }\n        case ADD_TEAM_FAILURE:\n            const {addTeamError} = action.payload\n            return {\n                ...state,\n                addTeamLoading: false,\n                addTeamError: addTeamError\n            }\n        case ADD_TEAM_SUCCESS:\n            const {addTeamMessage, team} = action.payload\n            return {\n                ...state,\n                addTeamLoading: false,\n                addTeamMessage: addTeamMessage,\n                team: team\n            }\n            \n        default:\n        return state\n    }\n\n}\n\nexport default team;\n\n\n","import { combineReducers } from 'redux';\nimport auth from './authReducer'\nimport team from './teamReducer'\n\nconst appReducer = combineReducers({\n    auth,\n    team\n});\n\nexport default appReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport appReducer from './reducers';\n \nconst composeEnhancers =\n  typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n \nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk),\n  // other store enhancers if any\n);\n \nexport default createStore(\n  appReducer, enhancer\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}